generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Show {
  id        String      @id @default(uuid())
  date      String      @unique @db.VarChar(7)
  venueId   String
  note      String[]
  tuning    String[]
  theme     String[]
  guest     String[]
  venue     Venue       @relation(fields: [venueId], references: [id])
  setlist   Track[]
  setshape  Setshape?   @relation(fields: [shape], references: [setmod])
  shape     String?     @default("S1_S2")
  archtop   String?
  album     Album[]
}

model Setshape {
  id        String      @id @default(uuid())
  setmod    String      @unique
  comment   String?
  shows     Show[]
}

model Song {
  id       String       @id @default(uuid())
  title    String       @unique
  aka      String[]
  source   Source       @default(ORIGINAL)
  played   Track[]
  writer   Songwriter[]
}

model Songwriter {
  id        String    @id @default(uuid())
  fullname  String    @unique
  shortname String?
  songs     Song[]
}

model Track {
  id        String    @id @default(uuid())
  position  String    @db.Char(3)
  songTitle String
  showDate  String    @db.VarChar(7)
  arrow     Boolean   @default(false)
  reprise   Boolean?  @default(false)
  show      Show      @relation(fields: [showDate], references: [date])
  song      Song      @relation(fields: [songTitle], references: [title])
}

model Venue {
  id     String       @id @default(uuid())
  site   String
  city   String
  school String?
  shows  Show[]

  @@unique([site, city], name: "site_city")
}

model Album {
  id         String      @id @default(uuid())
  title      String
  released   String
  shows      Show[]
}

enum Source {
  ORIGINAL
  COVER
  TRADITIONAL
}
